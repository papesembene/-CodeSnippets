#!/usr/bin/env php
<?php

/**
 * Script de migration de base de donn√©es
 */

require_once __DIR__ . '/../vendor/autoload.php';

// Charger les variables d'environnement
require_once __DIR__ . '/../App/config/env.php';
EnvLoader::load();

use App\Core\DataBase;

echo "üöÄ D√©marrage des migrations...\n\n";

try {
    // Connexion √† la base de donn√©es
    echo "üì° Connexion √† PostgreSQL...\n";
    $db = DataBase::getInstance();
    $connection = $db->getConnection();
    echo "‚úÖ Connexion r√©ussie!\n\n";

    // Cr√©er la table de migrations si elle n'existe pas
    echo "üìã V√©rification de la table des migrations...\n";
    $migrationTableSql = "
        CREATE TABLE IF NOT EXISTS migrations (
            id SERIAL PRIMARY KEY,
            migration VARCHAR(255) NOT NULL UNIQUE,
            executed_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
        );
    ";
    $connection->exec($migrationTableSql);
    echo "‚úÖ Table migrations OK!\n\n";

    // Lister les migrations d√©j√† ex√©cut√©es
    $stmt = $connection->query("SELECT migration FROM migrations ORDER BY executed_at");
    $executedMigrations = $stmt->fetchAll(PDO::FETCH_COLUMN);

    // Scanner le dossier des migrations
    $migrationsDir = __DIR__ . '/../database/migrations/';
    $migrationFiles = glob($migrationsDir . '*.sql');
    sort($migrationFiles);

    $newMigrations = 0;

    foreach ($migrationFiles as $migrationFile) {
        $migrationName = basename($migrationFile, '.sql');
        
        // V√©rifier si la migration a d√©j√† √©t√© ex√©cut√©e
        if (in_array($migrationName, $executedMigrations)) {
            echo "‚è© Migration d√©j√† ex√©cut√©e: $migrationName\n";
            continue;
        }

        echo "üîÑ Ex√©cution de la migration: $migrationName\n";
        
        try {
            // Lire et ex√©cuter le fichier SQL
            $sql = file_get_contents($migrationFile);
            $connection->exec($sql);
            
            // Enregistrer la migration comme ex√©cut√©e
            $stmt = $connection->prepare("INSERT INTO migrations (migration) VALUES (?)");
            $stmt->execute([$migrationName]);
            
            echo "‚úÖ Migration r√©ussie: $migrationName\n";
            $newMigrations++;
            
        } catch (Exception $e) {
            echo "‚ùå Erreur dans la migration $migrationName: " . $e->getMessage() . "\n";
            exit(1);
        }
    }

    if ($newMigrations === 0) {
        echo "\nüì¢ Aucune nouvelle migration √† ex√©cuter.\n";
    } else {
        echo "\nüéâ $newMigrations migration(s) ex√©cut√©e(s) avec succ√®s!\n";
    }

} catch (Exception $e) {
    echo "‚ùå Erreur g√©n√©rale: " . $e->getMessage() . "\n";
    exit(1);
}

echo "\n‚ú® Migrations termin√©es!\n";
